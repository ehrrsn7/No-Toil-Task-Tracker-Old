{"ast":null,"code":"var _jsxFileName = \"/Users/ehrrsn7/Documents/Code/Django+React/No-Toil-Task-Tracker/djangoapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { Tooltip } from \"@mui/material\";\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\";\nimport { useContext } from \"./contexts/contextProvider\";\nimport Example from \"./pages/example\";\nimport Dashboard from \"./pages/dashboard\";\nimport Sidebar from \"./components/sidebar\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const context = useContext(); // helper functions\n\n  function isMobileWidth() {\n    let mobileWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 600;\n    return window.innerWidth < mobileWidth;\n  }\n\n  function onNonSidebarClick() {\n    // don't close sidebar on click #nonSidebar\n    if (!isMobileWidth()) return; // click outside #sidebar to hide it (mobile only)\n\n    if (context.activeSidebar) context.setActiveSidebar(false);\n  } // set event listeners\n\n\n  useEffect(() => {\n    // dimension events\n    function resize() {\n      context.setScreenSize(window.innerWidth);\n    }\n\n    window.addEventListener(\"resize\", resize); // runtime\n\n    context.setScreenSize(window.innerWidth); // on construct\n\n    function onEscape(event) {\n      if (event.code === \"Escape\" || event.isComposing) context.setActiveSidebar(false);\n    }\n\n    document.addEventListener(\"keydown\", onEscape); // media query events\n\n    function handleDarkMode(event) {\n      context.setDarkMode(event.matches);\n      console.log(\"dark mode\", event.matches);\n    }\n\n    window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handleDarkMode); // destruct\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n      window.matchMedia(\"(prefers-color-scheme: dark)\").removeEventListener(\"change\", handleDarkMode);\n      document.removeEventListener(\"keydown\", onEscape);\n    };\n  }, [context]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nonSidebar\",\n        className: context.activeSidebar ? \"activeSidebar\" : \"\",\n        onClick: onNonSidebarClick,\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/dashboard\",\n              element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/example\",\n              element: /*#__PURE__*/_jsxDEV(Example, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open Settings Pane\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"settingsButton\",\n              width: 50,\n              onClick: () => {\n                console.log(\"todo: open settings pane\");\n              },\n              children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Toggle Dark Mode\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"darkModeButton\",\n              children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {\n                checked: context.darkMode,\n                onChange: context.setDarkMode,\n                width: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 16\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","Routes","Route","SettingsIcon","Tooltip","DarkModeSwitch","useContext","Example","Dashboard","Sidebar","Header","Footer","App","context","isMobileWidth","mobileWidth","window","innerWidth","onNonSidebarClick","activeSidebar","setActiveSidebar","resize","setScreenSize","addEventListener","onEscape","event","code","isComposing","document","handleDarkMode","setDarkMode","matches","console","log","matchMedia","removeEventListener","darkMode"],"sources":["/Users/ehrrsn7/Documents/Code/Django+React/No-Toil-Task-Tracker/djangoapp/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\nimport SettingsIcon from \"@mui/icons-material/Settings\"\nimport { Tooltip } from \"@mui/material\"\nimport { DarkModeSwitch } from \"react-toggle-dark-mode\"\nimport { useContext } from \"./contexts/contextProvider\"\nimport Example from \"./pages/example\"\nimport Dashboard from \"./pages/dashboard\"\nimport Sidebar from \"./components/sidebar\"\nimport Header from \"./components/header\"\nimport Footer from \"./components/footer\"\nimport \"./App.css\"\n\nexport default function App() {\n   const context = useContext()\n\n   \n   // helper functions\n   function isMobileWidth(mobileWidth = 600) {\n      return window.innerWidth < mobileWidth\n   }\n\n   function onNonSidebarClick() {\n      // don't close sidebar on click #nonSidebar\n      if (!isMobileWidth()) return \n      // click outside #sidebar to hide it (mobile only)\n      if (context.activeSidebar) \n         context.setActiveSidebar(false)\n   }\n\n   // set event listeners\n   useEffect(() => {\n\n      // dimension events\n      function resize() { context.setScreenSize(window.innerWidth) }\n      window.addEventListener(\"resize\", resize) // runtime\n      context.setScreenSize(window.innerWidth) // on construct\n\n      function onEscape(event) {\n         if (event.code === \"Escape\" || event.isComposing) \n            context.setActiveSidebar(false)\n      } document.addEventListener(\"keydown\", onEscape)\n   \n      // media query events\n      function handleDarkMode(event) {\n         context.setDarkMode(event.matches)\n         console.log(\"dark mode\", event.matches)\n      } window.matchMedia(\n         \"(prefers-color-scheme: dark)\"\n      ).addEventListener(\"change\", handleDarkMode)\n\n      // destruct\n      return () => {\n         window.removeEventListener(\"resize\", resize)\n         window.matchMedia(\n            \"(prefers-color-scheme: dark)\"\n         ).removeEventListener(\"change\", handleDarkMode)\n         document.removeEventListener(\"keydown\", onEscape)\n      }\n   }, [ context ])\n\n   return (\n      <div id=\"App\">\n         <BrowserRouter>\n            <Sidebar />\n    \n            <div id=\"nonSidebar\" className={context.activeSidebar ? \"activeSidebar\" : \"\"} \n            onClick={onNonSidebarClick} >\n    \n               <Header />\n       \n               {/* Content Div */}\n               {/* <div id=\"content\" style={darkMode ? styles.contentDark : styles.content}> */}\n               <div id=\"content\">\n                  <Routes>\n                     <Route path=\"/\" element={<Dashboard />} />\n                     <Route path=\"/dashboard\" element={<Dashboard />} />\n                     <Route path=\"/example\" element={<Example />} />\n                  </Routes>\n\n                  <Tooltip title=\"Open Settings Pane\">\n                     <button id=\"settingsButton\" width={50}\n                     onClick={() => {console.log(\"todo: open settings pane\")}} >\n                        <SettingsIcon />\n                     </button>\n                  </Tooltip>\n\n                  <Tooltip title=\"Toggle Dark Mode\">\n                     <button id=\"darkModeButton\">\n                        <DarkModeSwitch checked={context.darkMode} onChange={context.setDarkMode} width={50} />\n                     </button>\n                  </Tooltip>\n               </div> {/* End Content Div */}\n       \n               <Footer />\n    \n            </div> \n         </BrowserRouter>\n      </div>\n   )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}